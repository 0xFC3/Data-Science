# -*- coding: utf-8 -*-
"""Mnist

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oFjUI9vEcJQS5cQiRAIzJ5e2nyhmfXq9
"""

import tensorflow as tf
from tensorflow import keras
import numpy as np

print(tf.__version__)

!pip install kaggle

from google.colab import files
files.upload()

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/

# This permissions change avoids a warning on Kaggle tool startup.
!chmod 600 ~/.kaggle/kaggle.json

!kaggle competitions download -c digit-recognizer

import pandas as pd
ROWS_TO_SKIP = 1
train_data = pd.read_csv("train.csv", sep=",", skiprows=range(1,ROWS_TO_SKIP),nrows=42000)
x_test = pd.read_csv("test.csv")
train_data.sample(5)

y_train = train_data['label']
print(type(y_train))
y_train.sample(5)
drop_column = ['label']
train_data.drop(drop_column, axis=1, inplace=True)

train_data = train_data/255
x_test = x_test/255
train_data = train_data.values
y_train = y_train.values
x_test = x_test.values

train_data.sample(10)
print(type(train_data))

model = keras.Sequential([
    keras.layers.Dense(64,activation=tf.nn.relu),
    keras.layers.Dense(10,activation=tf.nn.softmax)
])

model.compile(optimizer=tf.train.AdamOptimizer(),
             loss='sparse_categorical_crossentropy',
             metrics=['accuracy'])

model.fit(train_data, y_train, epochs=8)

def find_biggest_index(lis):
  index_with_high_number = np.where(lis==max(lis))
  d = int(index_with_high_number[0])
  return d

predictions = model.predict(x_test)
for i in range(1,28001):
  print(i, end= "")
  print(',', end= "")
  print(find_biggest_index(predictions[i-1]))
